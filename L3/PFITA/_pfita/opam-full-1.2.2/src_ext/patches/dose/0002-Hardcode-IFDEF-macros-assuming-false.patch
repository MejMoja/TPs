From 85b9d244cc58f3333126b7fbe420c49763bd5dfa Mon Sep 17 00:00:00 2001
From: Louis Gesbert <louis.gesbert@ocamlpro.com>
Date: Fri, 14 Mar 2014 18:32:59 +0100
Subject: [PATCH 2/3] Hardcode IFDEF macros (assuming false)

the quick-and-dirty way:
```
sed -i -nre '
/\bIFDEF\b/{
  :LOOP
  s/.*\bELSE\b(.*)/\1/p; t ELSE
  s/.*\bEND\b(.*)/\1/p; t END
  n; b LOOP
  :ELSE
  s/.*\bEND\b(.*)/\1/p; t END
  p; n; b ELSE
  :END
}; p'
```
on all ml/mli files.
Same remarks as for __FILE__
---
 applications/ceve.ml       | 50 +++++++++--------------------------------
 applications/challenged.ml | 27 +++++++----------------
 common/input.ml            | 38 +++++++-------------------------
 common/input.mli           | 14 ++++--------
 doseparse/stdLoaders.ml    | 55 ++++++++++++++--------------------------------
 5 files changed, 46 insertions(+), 138 deletions(-)

diff --git a/applications/ceve.ml b/applications/ceve.ml
index 7e77537..4f6e144 100644
--- a/applications/ceve.ml
+++ b/applications/ceve.ml
@@ -18,10 +18,8 @@ open Doseparse
 
 include Util.Logging(struct let label = "applications/ceve.ml" end) ;;
 
-IFDEF HASOCAMLGRAPH THEN
-  module DGraph = Defaultgraphs.SyntacticDependencyGraph
-  module PGraph = Defaultgraphs.PackageGraph
-END
+
+
 
 module Options = struct
   open OptParse
@@ -227,46 +225,18 @@ let main () =
       |"dimacs" -> Printf.fprintf oc "%s" (Depsolver.output_clauses ~global_constraints ~enc:Depsolver.Dimacs u)
       |"cudf" -> Cudf_printer.pp_cudf oc doc
       |"table" ->
-IFDEF HASOCAMLGRAPH THEN
-        Printf.fprintf oc "%d\t%d\t%d\n"
-        (Cudf.universe_size u) (DGraph.G.nb_edges (DGraph.dependency_graph u))
-        (nr_conflicts u)
-ELSE
+
+
         failwith (Printf.sprintf "format table not supported: needs ocamlgraph")
-END
+
+
 
       |("dot" | "gml" | "grml") as t -> 
-IFDEF HASOCAMLGRAPH THEN
-        let fmt = Format.formatter_of_out_channel oc in
-        begin match OptParse.Opt.get Options.grp_type with
-          |"syn" ->
-            let g = DGraph.dependency_graph u in
-            if t = "dot" then DGraph.DotPrinter.print fmt g
-            else if t = "gml" then DGraph.GmlPrinter.print fmt g
-            else if t = "grml" then DGraph.GraphmlPrinter.print fmt g
-            else assert false
-          |("pkg" | "strdeps" | "conj"| "dom") as gt ->
-            let g =
-              if gt = "pkg" then PGraph.dependency_graph u
-              else if gt = "strdeps" then Strongdeps.strongdeps_univ u
-              else if gt = "conj" then Strongdeps.conjdeps_univ u
-              else if gt = "dom" then
-                let g = Strongdeps.strongdeps_univ ~transitive:true universe in
-                Dominators.dominators_tarjan g
-              else assert false
-            in
-            if t = "dot" then
-              PGraph.DotPrinter.print fmt g
-            else if t = "gml" then
-              PGraph.GmlPrinter.print fmt g
-            else if t = "grml" then
-              PGraph.GraphmlPrinter.print fmt g
-            else assert false
-          |s -> failwith (Printf.sprintf "type %s not supported" s)
-        end
-ELSE
+
+
         failwith (Printf.sprintf "format %s not supported: needs ocamlgraph" t)
-END
+
+
       |_ -> assert false
       end ;
       close_out oc;
diff --git a/applications/challenged.ml b/applications/challenged.ml
index b166922..b1aaea3 100644
--- a/applications/challenged.ml
+++ b/applications/challenged.ml
@@ -29,18 +29,12 @@ module Options = struct
   let brokenlist = StdOpt.store_true ()
   let downgrades = StdOpt.store_true ()
   let cluster = StdOpt.store_true ()
-IFDEF HASPARMAP THEN
-  let ncores = StdOpt.int_option ~default:1 ()
-  let chunksize = StdOpt.int_option ()
-END
+
+
   open OptParser ;;
 
-IFDEF HASPARMAP THEN
-  add options ~long_name:"ncores"
-    ~help:"Number of cores to use on a multicore" ncores;
-  add options ~long_name:"chunksize"
-    ~help:"Size of each task executed by the workers (controls granularity)" chunksize;
-END
+
+
 
   add options ~long_name:"checkonly"
     ~help:"Check only these packages ex. sn1 (=sv1),sn2 (=sv2)" checkonly;
@@ -227,16 +221,11 @@ let challenged
   (* computing *)
   let results = 
     let map f l =
-IFDEF HASPARMAP THEN
-    let ncores = OptParse.Opt.get Options.ncores in
-    match OptParse.Opt.opt Options.chunksize with
-      None ->     
-	Parmap.parmap ~ncores f (Parmap.L l)
-    | Some chunksize ->       
-	Parmap.parmap ~ncores ~chunksize f (Parmap.L l)
-ELSE
+
+
     List.map f l
-END
+
+
     in
     map (fun ((sn,sv,version),(cluster,vl,constr)) ->
       let startd=Unix.gettimeofday() in
diff --git a/common/input.ml b/common/input.ml
index b04b703..0e92ac9 100644
--- a/common/input.ml
+++ b/common/input.ml
@@ -15,41 +15,19 @@ open ExtLib
 include Util.Logging(struct let label = "common/input.ml" end) ;;
 
 let gzip_open_file file =
-IFDEF HASZIP THEN
-  let ch = Gzip.open_in file in
-  let input_char ch = try Gzip.input_char ch with End_of_file -> raise IO.No_more_input in
-  let read ch = try Gzip.input ch with End_of_file -> raise IO.No_more_input in
-  IO.create_in
-  ~read:(fun () -> input_char ch)
-  ~input:(read ch)
-  ~close:(fun () -> Gzip.close_in ch)
-ELSE
+
+
     fatal "gzip not supported. re-configure with --with-zip"
-END
+
+
 ;;
 
 let bzip_open_file file =
-IFDEF HASBZ2 THEN
-  (* workaround to avoid segfault :
-   * http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=602170 *)
-  let _ = Bz2.version in 
-  let s = " " in
-  let ch = Bz2.open_in (open_in file) in
-  let input_char ch = 
-    try ignore (Bz2.read ch s 0 1) ; s.[0]
-    with End_of_file -> raise IO.No_more_input
-  in
-  let read ch s pos len =
-    try Bz2.read ch s pos len 
-    with End_of_file -> raise IO.No_more_input
-  in
-  IO.create_in
-  ~read:(fun () -> input_char ch)
-  ~input:(read ch)
-  ~close:(fun () -> Bz2.close_in ch)
-ELSE
+
+
     fatal "bzip not supported. re-configure with --with-bz2"
-END
+
+
 
 ;;
 let std_open_file file = IO.input_channel (open_in file)
diff --git a/common/input.mli b/common/input.mli
index 08fd614..6f13aa5 100644
--- a/common/input.mli
+++ b/common/input.mli
@@ -14,17 +14,11 @@
 
 open ExtLib
 
-IFDEF HASZIP THEN
-(** load a file in gzip format
-    @return ExtLib.IO.input channel *)
-val gzip_open_file : string -> IO.input
-END
 
-IFDEF HASBZ2 THEN
-(** load a file in bzip format - Not implemented yet
-    @return ExtLib.IO.input channel *)
-val bzip_open_file : string -> IO.input
-END
+
+
+
+
 
 (** load a non compressed file  
     @return ExtLib.IO.input channel *)
diff --git a/doseparse/stdLoaders.ml b/doseparse/stdLoaders.ml
index 23429d9..c2a833a 100644
--- a/doseparse/stdLoaders.ml
+++ b/doseparse/stdLoaders.ml
@@ -121,22 +121,11 @@ let deb_load_universe options l =
  * refactor or not refactor ? *)
 (** transform a list of rpm control stanza into a cudf packages list *)
 let rpm_load_list dll =
-IFDEF HASRPM THEN
-  let tables =  Rpm.Rpmcudf.init_tables (List.flatten dll) in
-  let cll = 
-    List.map (fun l -> 
-      List.map (Rpm.Rpmcudf.tocudf tables) l 
-    ) dll
-  in
-  (* Rpm.Rpmcudf.clear tables; *)
-  let from_cudf (p,i) = (p,string_of_int i) in
-  let to_cudf (p,v) = (p,Rpm.Rpmcudf.get_cudf_version tables (p,v)) in
-  let preamble = Rpm.Rpmcudf.preamble in
-  let request = Cudf.default_request in
-  (preamble,cll,request,from_cudf,to_cudf)
-ELSE
+
+
   failwith "librpm not available. re-configure with --with-rpm"
-END
+
+
 
 (** transform a list of rpm control stanza into a cudf universe *)
 let rpm_load_universe l =
@@ -301,41 +290,29 @@ let parse_input ?(options=None) urilist =
   |`Cv, Some (StdOptions.Cv opt) -> cv_parse_input opt filelist
 
   |`Hdlist, None -> 
-IFDEF HASRPM THEN
-      let dll = 
-        List.map (fun l ->
-          let filelist = List.map unpack l in
-          Rpm.Packages.Hdlists.input_raw filelist
-        ) filelist 
-      in
-      rpm_load_list dll
-ELSE
+
+
     fatal "hdlist Not supported. re-configure with --with-rpm"
-END
+
+
 
   |`Synthesis, None -> 
-IFDEF HASRPM THEN
-      let dll = 
-        List.map (fun l ->
-          let filelist = List.map unpack l in
-          Rpm.Packages.Synthesis.input_raw filelist
-        ) filelist
-      in
-      rpm_load_list dll
-ELSE
+
+
     fatal "synthesis input format not supported. re-configure with --with-rpm"
-END
+
+
     |s,_ -> fatal "%s Not supported" (Url.scheme_to_string s)
 ;;
 
 let supported_formats () =
   let standard = ["cudf://";"deb://";"deb://-";"eclipse://"] in
   let rpm = 
-IFDEF HASRPM THEN
-     ["hdlist://";"synthesis://"]
-ELSE
+
+
      []
-END
+
+
    in
    standard@rpm
 ;;
-- 
2.1.4

