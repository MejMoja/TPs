package attaque;

import java.util.HashSet;
import java.util.Set;

import protagoniste.ZoneDeCombat;

public abstract class Arme extends ForceDeCombat implements Comparable<Arme>{
	private Set<ZoneDeCombat> zoneDeCombat = new HashSet<ZoneDeCombat>();
	public Arme(int pointDeDegat, String nom, ZoneDeCombat... zoneDeCombats){
		super(pointDeDegat, nom);
		for(ZoneDeCombat z : zoneDeCombats) {
			zoneDeCombat.add(z);
		}
	}
	
	public Set<ZoneDeCombat> getZoneDeCombat() {
		return zoneDeCombat;
	}
	
	public int compareTo(Arme o) {
		if(o.operationnel && this.operationnel){
			Integer i = Integer.valueOf(o.getPointDeDegat());
			Integer j = Integer.valueOf(this.getPointDeDegat());
			if(i.compareTo(j) == 0) {
				return o.getNom().compareTo(this.getNom());
			}else {
				return i.compareTo(j);
			}
		}else if(o.operationnel && !this.operationnel) {
			return -1;
		}else if(!o.operationnel && this.operationnel){
			return 1;
		}else {
			return o.getNom().compareTo(this.getNom());
		}
	}
	
	@Override
	public boolean equals(Object obj) {
		if (obj == null)
		    return false;

		if (this.getClass() != obj.getClass())
		    return false;

		Arme a = (Arme)obj;
		return this.getNom().equals(a) && (this.getPointDeDegat() == a.getPointDeDegat());
	}
}
